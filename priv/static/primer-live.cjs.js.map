{
  "version": 3,
  "sources": ["../../assets/index-js-only.ts", "../../assets/js/session.ts", "../../assets/js/prompt.ts"],
  "sourcesContent": ["export * from './js';\n", "type PhxEvent = Record<string, unknown>;\n\nexport type TSession = {\n  /**\n   * Phoenix LiveView callback.\n   */\n  mounted: () => void;\n};\n\nexport const Session = {\n  mounted() {\n    window.addEventListener('phx:pl-session', (e: CustomEvent<PhxEvent>) =>\n      fetch(`/api/pl-session?payload=${JSON.stringify(e.detail)}`, {\n        method: 'post',\n      })\n    );\n  },\n};\n\ndeclare global {\n  interface Window {\n    Session?: TSession;\n  }\n}\n\nwindow.Session = Session;\n", "type MaybeHTMLElement = HTMLElement | null;\n\ntype PromptElements = {\n  root: HTMLElement;\n  content: HTMLElement;\n  touchLayer?: MaybeHTMLElement;\n  toggle?: MaybeHTMLElement;\n};\n\ntype PromptOptions = {\n  willShow?: (elements?: PromptElements) => void;\n  didShow?: (elements?: PromptElements) => void;\n  willHide?: (elements?: PromptElements) => void;\n  didHide?: (elements?: PromptElements) => void;\n};\n\ntype PromptState = 'showing' | 'endShowing' | 'hiding' | 'endHiding';\n\nfunction getCheckboxFromPromptContent(contentElement: HTMLElement) {\n  const root = contentElement.closest('[data-prompt]');\n  if (!root) {\n    return null; \n  }\n  const checkbox: HTMLInputElement | null = root.querySelector('input[type=\"checkbox\"]');\n  if (!checkbox) {\n    return null;\n  }\n  return checkbox;\n}\n\nfunction getCheckboxFromSelectorOrElement(selectorOrElement: string | HTMLElement) {\n  let checkbox: HTMLInputElement | null = null;\n  if (typeof selectorOrElement === \"string\") {\n    const element: MaybeHTMLElement = document.querySelector(selectorOrElement);\n    if (element) {\n      checkbox = element.querySelector('input[type=\"checkbox\"]');\n    }\n  } else {\n    checkbox = getCheckboxFromPromptContent(selectorOrElement);\n  }\n  return checkbox;\n}\n    \nfunction getElements(checkbox: HTMLInputElement): PromptElements {\n  const root: MaybeHTMLElement = checkbox.closest('[data-prompt]');\n\n  if (!root) {\n    throw new Error(\"Prompt element 'data-prompt' not found\")\n  }\n\n  const wrapper: MaybeHTMLElement = root?.querySelector('[data-prompt-content]') || null;\n  if (!wrapper) {\n    throw new Error(\"Prompt element 'data-prompt-content' not found\")\n  }\n\n  const content: MaybeHTMLElement = wrapper?.querySelector('[data-content]');\n  if (!content) {\n    throw new Error(\"Prompt element 'data-content' not found\")\n  }\n\n  const touchLayer: MaybeHTMLElement = wrapper?.querySelector('[data-touch]') || null;\n  const toggle: MaybeHTMLElement = root?.querySelector('label') || null;\n  \n  return {\n    root,\n    touchLayer,\n    content,\n    toggle\n  }\n}\n\nfunction setCheckboxState({\n  checkbox,\n  state,\n  elements,\n  options,\n} : {\n  checkbox: HTMLInputElement;\n  state: PromptState;\n  elements: PromptElements;\n  options: PromptOptions;\n}) {\n  switch (state) {\n    case 'showing':\n      delete checkbox.dataset.ishiding;\n      checkbox.dataset.isshowing = \"\";\n      if (options.willShow) {\n        options.willShow(elements)\n      }\n      break;\n    case 'endShowing':\n      delete checkbox.dataset.isshowing;\n      if (options.didShow) {\n        options.didShow(elements)\n      }\n      break;\n    case 'hiding':\n      delete checkbox.dataset.isshowing;\n      checkbox.checked = false;\n      checkbox.dataset.ishiding = \"\";\n      if (options.willHide) {\n        options.willHide(elements)\n      }\n      break;\n    case 'endHiding':\n      delete checkbox.dataset.ishiding;\n      if (options.didHide) {\n        options.didHide(elements)\n      }\n      break;\n    default:\n      break;\n  }\n}\n\nexport const Prompt = {\n  mounted() {},\n  change: function(checkbox: HTMLInputElement, options: PromptOptions = {}) {\n    const elements = getElements(checkbox);\n    checkbox.addEventListener('transitionend', function(evt) {\n      setCheckboxState({ checkbox, state: checkbox.checked ? 'endShowing' : 'endHiding', elements, options });\n    }, { once: true });\n    setCheckboxState({ checkbox, state: checkbox.checked ? 'showing' : 'hiding', elements, options });\n  },\n  hide: function(selectorOrElement: string | HTMLElement) {\n    if (typeof selectorOrElement !== 'string' && selectorOrElement.dataset.touch !== undefined) {\n      // Clicked touch layer\n      const root: MaybeHTMLElement = selectorOrElement.closest('[data-prompt]');\n      if (root?.dataset.ismodal !== undefined) {\n        return;\n      }\n    }\n    getCheckboxFromSelectorOrElement(selectorOrElement)?.click();\n  },\n  show: function(selectorOrElement: string | HTMLElement) {\n    getCheckboxFromSelectorOrElement(selectorOrElement)?.click();\n  },\n}\n\ndeclare global {\n  interface Window {\n    Prompt?: typeof Prompt;\n  }\n}\n\nif (typeof window !== 'undefined') {\n  window.Prompt = Prompt;\n}\n"],
  "mappings": "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",
  "names": []
}
