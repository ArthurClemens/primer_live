{
  "version": 3,
  "sources": ["../../assets/javascript/prompt.ts"],
  "sourcesContent": ["import { ViewHook } from \"phoenix_live_view\";\n\n/**\nPrompt Hook handles status callbacks.\n*/\nexport type TPrompt = Partial<ViewHook> & {\n  handlePromptOpen?: (evt: CustomEvent) => void;\n  handlePromptClose?: (evt: CustomEvent) => void;\n};\n\nexport const Prompt: TPrompt = {\n  mounted() {\n    const el = this.el as HTMLElement;\n    const contentEl = el.querySelector(\"[data-content]\");\n\n    if (!(contentEl instanceof HTMLElement)) {\n      console.error(\"Missing element with attribute [data-content]\");\n      return;\n    }\n\n    const pushEvent = (selector: string, status: string) => {\n      this.pushEventTo?.(selector, \"primer_live:prompt\", {\n        elementId: el.id,\n        status: status,\n      });\n    };\n\n    const createStatusHandler = (startStatus: string, endStatus: string) => {\n      return (evt: CustomEvent) => {\n        const selector = evt.detail.selector;\n        if (!selector) {\n          console.error(\"Missing status_callback_selector\");\n          return;\n        }\n\n        pushEvent(selector, startStatus);\n\n        contentEl.addEventListener(\n          \"transitionend\",\n          function (_evt) {\n            pushEvent(selector, endStatus);\n          },\n          { once: true },\n        );\n      };\n    };\n\n    this.handlePromptOpen = createStatusHandler(\"opening\", \"open\");\n    el.addEventListener(\"prompt:open\", this.handlePromptOpen);\n\n    this.handlePromptClose = createStatusHandler(\"closing\", \"closed\");\n    el.addEventListener(\"prompt:close\", this.handlePromptClose);\n  },\n  destroyed() {\n    if (!this.el) {\n      return;\n    }\n    if (this.handlePromptOpen) {\n      this.el.removeEventListener(\"prompt:open\", this.handlePromptOpen);\n    }\n    if (this.handlePromptClose) {\n      this.el.removeEventListener(\"prompt:close\", this.handlePromptClose);\n    }\n  },\n};\n\ndeclare global {\n  interface Window {\n    Prompt: TPrompt;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.Prompt = Prompt;\n}\n\n/**\nHandle closing prompts using the Escape key. The listener function ensures that only\nthe top prompt is closed, so stacked prompts can be closed one by one.\n*/\n\nwindow.addEventListener(\"keydown\", maybeCloseFromEscapeKey);\n\nfunction maybeCloseFromEscapeKey(evt: KeyboardEvent) {\n  if (evt.key === \"Escape\") {\n    // Only close the top element if its root dataset contains \"is escapable\" data attr\n    const openPrompts = Array.from(\n      document.querySelectorAll<HTMLElement>(\"[data-prompt].is-open\"),\n    ).filter((el) => el.dataset.isescapable !== undefined);\n\n    let topOpenPrompt = openPrompts.reverse()[0];\n    if (!(topOpenPrompt instanceof HTMLElement)) {\n      return;\n    }\n\n    openPrompts.forEach((el) => {\n      const focusWrapEl = el.querySelector(\"[data-focuswrap]\");\n      if (focusWrapEl instanceof HTMLElement) {\n        const keyName = el == topOpenPrompt ? \"Escape\" : \"Escape_disabled\";\n        focusWrapEl.setAttribute(\"phx-key\", keyName);\n      }\n    });\n  }\n}\n"],
  "mappings": ";AAUO,IAAM,SAAkB;AAAA,EAC7B,UAAU;AACR,UAAM,KAAK,KAAK;AAChB,UAAM,YAAY,GAAG,cAAc,gBAAgB;AAEnD,QAAI,EAAE,qBAAqB,cAAc;AACvC,cAAQ,MAAM,+CAA+C;AAC7D;AAAA,IACF;AAEA,UAAM,YAAY,CAAC,UAAkB,WAAmB;AApB5D;AAqBM,iBAAK,gBAAL,8BAAmB,UAAU,sBAAsB;AAAA,QACjD,WAAW,GAAG;AAAA,QACd;AAAA,MACF;AAAA,IACF;AAEA,UAAM,sBAAsB,CAAC,aAAqB,cAAsB;AACtE,aAAO,CAAC,QAAqB;AAC3B,cAAM,WAAW,IAAI,OAAO;AAC5B,YAAI,CAAC,UAAU;AACb,kBAAQ,MAAM,kCAAkC;AAChD;AAAA,QACF;AAEA,kBAAU,UAAU,WAAW;AAE/B,kBAAU;AAAA,UACR;AAAA,UACA,SAAU,MAAM;AACd,sBAAU,UAAU,SAAS;AAAA,UAC/B;AAAA,UACA,EAAE,MAAM,KAAK;AAAA,QACf;AAAA,MACF;AAAA,IACF;AAEA,SAAK,mBAAmB,oBAAoB,WAAW,MAAM;AAC7D,OAAG,iBAAiB,eAAe,KAAK,gBAAgB;AAExD,SAAK,oBAAoB,oBAAoB,WAAW,QAAQ;AAChE,OAAG,iBAAiB,gBAAgB,KAAK,iBAAiB;AAAA,EAC5D;AAAA,EACA,YAAY;AACV,QAAI,CAAC,KAAK,IAAI;AACZ;AAAA,IACF;AACA,QAAI,KAAK,kBAAkB;AACzB,WAAK,GAAG,oBAAoB,eAAe,KAAK,gBAAgB;AAAA,IAClE;AACA,QAAI,KAAK,mBAAmB;AAC1B,WAAK,GAAG,oBAAoB,gBAAgB,KAAK,iBAAiB;AAAA,IACpE;AAAA,EACF;AACF;AAQA,IAAI,OAAO,WAAW,aAAa;AACjC,SAAO,SAAS;AAClB;AAOA,OAAO,iBAAiB,WAAW,uBAAuB;AAE1D,SAAS,wBAAwB,KAAoB;AACnD,MAAI,IAAI,QAAQ,UAAU;AAExB,UAAM,cAAc,MAAM;AAAA,MACxB,SAAS,iBAA8B,uBAAuB;AAAA,IAChE,EAAE,OAAO,CAAC,OAAO,GAAG,QAAQ,gBAAgB,MAAS;AAErD,QAAI,gBAAgB,YAAY,QAAQ,EAAE,CAAC;AAC3C,QAAI,EAAE,yBAAyB,cAAc;AAC3C;AAAA,IACF;AAEA,gBAAY,QAAQ,CAAC,OAAO;AAC1B,YAAM,cAAc,GAAG,cAAc,kBAAkB;AACvD,UAAI,uBAAuB,aAAa;AACtC,cAAM,UAAU,MAAM,gBAAgB,WAAW;AACjD,oBAAY,aAAa,WAAW,OAAO;AAAA,MAC7C;AAAA,IACF,CAAC;AAAA,EACH;AACF;",
  "names": []
}
